on:
  push:
    branches:
      - main
    paths:
      - RELEASENOTES.**

jobs:

  import-generated:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'

    steps:
      - name: set git username
        run: git config --global user.email "${{ secrets.NBDROID_EMAIL }}"

      - name: set git email
        run: git config --global user.name "${{ secrets.NBDROID_NAME }}"

      - run: ls -la

      - name: clone nosqlbench-build-docs
        env:
          NBDROID_NAME: ${{ secrets.NBDROID_NAME }}
          NBDROID_TOKEN: ${{ secrets.NBDROID_TOKEN }}
        run: |
          git clone https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-build-docs.git nosqlbench-build-docs
          cd nosqlbench-build-docs
          echo "files listing"
          find .
          git remote set-url origin https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-build-docs.git
          git remote -v

      - name: 'Import Content'
        run: |
          set -x
          cd nosqlbench-build-docs
          ./doimport.sh

      - name: "commit imported changes"
        env:
          NBDROID_NAME: ${{ secrets.NBDROID_NAME }}
          NBDROID_TOKEN: ${{ secrets.NBDROID_TOKEN }}
        run: |
          set -x
          pwd
          cd nosqlbench-build-docs
          git add site
          git add -u
          CHANGES=$(git status --porcelain 2>/dev/null| wc -l)
          echo "found $CHANGES to push for doc updates"
          if (( $CHANGES > 0 ))
          then
            git commit -m"docs update for $GITHUB_REF"
            git push
          fi


  build-site:
    needs: import-generated
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Build and Deploy Static Site'
        uses: shalzz/zola-deploy-action@master
        env:
          BUILD_DIR: ./site
          GITHUB_TOKEN: ${{ secrets.NBDROID_TOKEN }}


  promote-to-prerelease:
    needs: build-site
    runs-on: ubuntu-20.04
    steps:
      - name: set git username
        run: git config --global user.email "${{ secrets.NBDROID_EMAIL }}"

      - name: set git email
        run: git config --global user.name "${{ secrets.NBDROID_NAME }}"

      - run: ls -la

      - name: clone nosqlbench-build-docs
        env:
          NBDROID_NAME: ${{ secrets.NBDROID_NAME }}
          NBDROID_TOKEN: ${{ secrets.NBDROID_TOKEN }}
        run: |
          git clone https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-build-docs.git nosqlbench-build-docs
          cd nosqlbench-build-docs
          echo "files listing"
          find .
          git remote set-url origin https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-build-docs.git
          git remote -v

      - name: clone nosqlbench-preview-docs
        env:
          NBDROID_NAME: ${{ secrets.NBDROID_NAME }}
          NBDROID_TOKEN: ${{ secrets.NBDROID_TOKEN }}
        run: |
          git clone https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-preview-docs.git nosqlbench-preview-docs
          cd nosqlbench-preview-docs
          echo "files listing"
          find .
          git remote set-url origin https://${{secrets.NBDROID_NAME}}:${{secrets.NBDROID_TOKEN}}@github.com/nosqlbench/nosqlbench-preview-docs.git
          git remote -v

      - name: sync build to prerelease content
        run: |
          rsync -av --delete --exclude='.git/' nosqlbench-build-docs/ nosqlbench-preview-docs/

      - name: set CNAME
        run: |
          echo "previewdocs.nosqlbench.io" > nosqlbench-build-docs/site/static/CNAME

      - name: commit changes
        run: |
          cd nosqlbench-preview-docs
          git add -A

      - name: push changes
        env:
          NBDROID_NAME: ${{ secrets.NBDROID_NAME }}
          NBDROID_TOKEN: ${{ secrets.NBDROID_TOKEN }}
        run: |
          set -x
          cd nosqlbench-preview-docs
          CHANGES=$(git status --porcelain 2>/dev/null| wc -l)
          echo "found $CHANGES to push for doc updates"
          if (( $CHANGES > 0 ))
          then
            git commit -m"docs update for $GITHUB_REF"
            git push
          fi
          echo "push completed"
